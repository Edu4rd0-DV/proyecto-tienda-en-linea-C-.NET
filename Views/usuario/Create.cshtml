@model WebApplication.ServiceReference.Usuario

@{
    Layout = null;
}
<link rel="stylesheet" href="~/Content/bootstrap.css">
<link rel="stylesheet" href="~/Content/fondo.css" />
<body style="background: url(../img/01.jpg) no-repeat center top; background-size: cover; margin:10px; margin-left:8%;">

    @using (Html.BeginForm("Create", "usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div  class="form-horizontal" >
            <h4>Nuevo Usuario</h4>
            <hr />

            <output id="list"><img src="~/img/user.png" class="thumb" /></output>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="width:500px; border-left-color:black;">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="width:500px;">
                @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="width:500px; border:0;">
                @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sexo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="width:500px;">
                @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="width:500px;">
                @Html.LabelFor(model => model.contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="files" name="FileBase" />
                    @Html.ValidationMessageFor(model => model.imagen, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" style="width:150px;" />
                <a href="@Url.Action("Login", "Usuario")" class="btn btn-dark" style="width:150px;">Volver</a>

                <br />
            </div>
        </div>

    }


    <style>
        .thumb {
            height: 170px;
            border: 1px solid #000;
            margin: 10px 5px 0 0;
            margin-left: 130px;
        }
    </style>
    <script>
        function archivo(evt) {
            var files = evt.target.files; // FileList object

            // Obtenemos la imagen del campo "file".
            for (var i = 0, f; f = files[i]; i++) {
                //Solo admitimos imágenes.
                if (!f.type.match('image.*')) {
                    continue;
                }

                var reader = new FileReader();

                reader.onload = (function (theFile) {
                    return function (e) {
                        // Insertamos la imagen
                        document.getElementById("list").innerHTML = ['<img class="thumb" src="', e.target.result, '" title="', escape(theFile.name), '" />'].join('');
                    };
                })(f);

                reader.readAsDataURL(f);
            }
        }

        document.getElementById('files').addEventListener('change', archivo, false);
    </script>
</body>